#Replacing string in file
def readAndReplace():
    f=open('example.txt','r+')
    data=f.read().strip()
    data=data.replace('placement','screening')
    f.seek(0)
    f.write(data)
    f.close()
readAndReplace()
----------------------------------------------------------------------------------------------------------------------
#Use of Decorators
def login_required(f1):
    name = ["sasi","sudeep","sandeep"]
    def inner(name,is_login):
        if is_login == False:
            print("kindly Login")
            return
        return f1(name,is_login)
    return inner
@login_required
def home(name,is_login):
    print("Welcome to home page")
@login_required
def orders(name,is_login):
    print("welcome to orders page")
def about():
    print("Welcome to about page")
----------------------------------------------------------------------------------------------------------------------

#Use of Abstract Class
from abc import ABC,abstractmethod
class polygon(ABC):
    @abstractmethod
    def no_of_sides(self):
        pass
class triangle(polygon):
    def __init__(self):
        pass
    def no_of_sides(self):
        print("I have 3 sides")
class rectangle(polygon):
    def __init__(self):
        pass
    def no_of_sides(self):
        print("I have 4 sides")
obj1 = triangle()
obj2 = rectangle()
obj1.no_of_sides()
obj2.no_of_sides()
---------------------------------------------------------------------------------------------------------------
#Use of multiple inheritance
class vehicle():
    def __init__(self,fname,age,mobile,license,validity,vehnum,vehage):
        self.fname=fname
        self.age=age
        self.mobile=mobile
        self.license=license
        self.validity=validity
        self.vehnum=vehnum
        self.vehage=vehage
    def is_valid_driver(self):
        if self.age >= 20:
            return True
        else:
            return False
class diesel():
    def __init__(self,price):
        self.price=price
class Bus(vehicle,diesel):
    def __init__(self,fname,age,mobile,license,validity,vehnum,vehage,price,wheels):

        vehicle.__init__(self,fname,age,mobile,license,validity,vehnum,vehage)
        diesel.__init__(self,price)
        self.wheels=wheels

bus = Bus('user',21,2345,2546,23,45,289,30,40)
print("validity:",bus.is_valid_driver())




